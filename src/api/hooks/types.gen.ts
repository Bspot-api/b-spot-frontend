// This file is auto-generated by @hey-api/openapi-ts

export type CreateCompanyDto = {
    /**
     * Company name
     */
    name: string;
    /**
     * Company description
     */
    description: string;
    /**
     * Company source URL
     */
    source: string;
    /**
     * Investment fund ID
     */
    fund: string;
    /**
     * Business sector ID
     */
    sector: string;
    /**
     * Involved personalities IDs
     */
    personalities: Array<string>;
};

export type Fund = {
    /**
     * Fund unique identifier
     */
    id: string;
    /**
     * Fund name
     */
    name: string;
    /**
     * Fund description
     */
    description: string;
    /**
     * Published status
     */
    published: boolean;
    /**
     * Date added
     */
    createdAt: string;
};

export type Sector = {
    /**
     * Sector unique identifier
     */
    id: string;
    /**
     * Sector name
     */
    name: string;
    /**
     * Sector description
     */
    description: string;
    /**
     * Published status
     */
    published: boolean;
    /**
     * Date added
     */
    createdAt: string;
};

export type Personality = {
    /**
     * Personality unique identifier
     */
    id: string;
    /**
     * Personality name
     */
    name: string;
    /**
     * Personality description
     */
    description: string;
    /**
     * Published status
     */
    published: boolean;
    /**
     * Date added
     */
    createdAt: string;
};

export type Company = {
    /**
     * Company unique identifier
     */
    id: string;
    /**
     * Company name
     */
    name: string;
    /**
     * Company description
     */
    description: string;
    /**
     * Source link (URL)
     */
    source: string;
    /**
     * Published status
     */
    published: boolean;
    /**
     * Date added
     */
    createdAt: string;
    /**
     * Investment fund
     */
    fund: Fund;
    /**
     * Business sector
     */
    sector: Sector;
    /**
     * Involved personalities
     */
    personalities: Array<Personality>;
};

export type AppControllerGetHelloData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/';
};

export type AppControllerGetHelloResponses = {
    /**
     * Application is running
     */
    200: {
        message?: string;
        timestamp?: string;
        version?: string;
    };
};

export type AppControllerGetHelloResponse = AppControllerGetHelloResponses[keyof AppControllerGetHelloResponses];

export type AppControllerGetHealthData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/health';
};

export type AppControllerGetHealthResponses = {
    /**
     * Service is healthy
     */
    200: {
        status?: string;
        uptime?: number;
    };
};

export type AppControllerGetHealthResponse = AppControllerGetHealthResponses[keyof AppControllerGetHealthResponses];

export type AuthControllerSignUpData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/auth/signup';
};

export type AuthControllerSignUpResponses = {
    201: unknown;
};

export type AuthControllerSignInData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/auth/signin';
};

export type AuthControllerSignInResponses = {
    201: unknown;
};

export type AuthControllerChangePasswordData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/auth/change-password';
};

export type AuthControllerChangePasswordResponses = {
    201: unknown;
};

export type CompanyControllerFindAllData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Page number (default: 1)
         */
        page?: number;
        /**
         * Items per page (default: 30)
         */
        limit?: number;
        /**
         * Search term for company name, fund name, sector name, or personality name
         */
        search?: string;
        /**
         * Filter by fund IDs (comma-separated values)
         */
        fundIds?: string;
        /**
         * Filter by sector IDs (comma-separated values)
         */
        sectorIds?: string;
        /**
         * Filter by personality IDs (comma-separated values)
         */
        personalityIds?: string;
    };
    url: '/companies';
};

export type CompanyControllerFindAllResponses = {
    /**
     * Companies retrieved successfully
     */
    200: {
        data?: Array<Company>;
        pagination?: {
            page?: number;
            limit?: number;
            total?: number;
            totalPages?: number;
        };
    };
};

export type CompanyControllerFindAllResponse = CompanyControllerFindAllResponses[keyof CompanyControllerFindAllResponses];

export type CompanyControllerCreateData = {
    body: CreateCompanyDto;
    path?: never;
    query?: never;
    url: '/companies';
};

export type CompanyControllerCreateResponses = {
    /**
     * Company created successfully
     */
    201: Company;
};

export type CompanyControllerCreateResponse = CompanyControllerCreateResponses[keyof CompanyControllerCreateResponses];

export type CompanyControllerRemoveData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/companies/{id}';
};

export type CompanyControllerRemoveResponses = {
    /**
     * Company deleted successfully
     */
    200: unknown;
};

export type CompanyControllerFindOneData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/companies/{id}';
};

export type CompanyControllerFindOneResponses = {
    /**
     * Company found
     */
    200: Company;
};

export type CompanyControllerFindOneResponse = CompanyControllerFindOneResponses[keyof CompanyControllerFindOneResponses];

export type CompanyControllerUpdateData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/companies/{id}';
};

export type CompanyControllerUpdateResponses = {
    /**
     * Company updated successfully
     */
    200: Company;
};

export type CompanyControllerUpdateResponse = CompanyControllerUpdateResponses[keyof CompanyControllerUpdateResponses];

export type FundControllerFindAllData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/funds';
};

export type FundControllerFindAllResponses = {
    200: unknown;
};

export type FundControllerCreateData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/funds';
};

export type FundControllerCreateResponses = {
    201: unknown;
};

export type FundControllerRemoveData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/funds/{id}';
};

export type FundControllerRemoveResponses = {
    200: unknown;
};

export type FundControllerFindOneData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/funds/{id}';
};

export type FundControllerFindOneResponses = {
    200: unknown;
};

export type FundControllerUpdateData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/funds/{id}';
};

export type FundControllerUpdateResponses = {
    200: unknown;
};

export type FundControllerGetCompaniesData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/funds/{id}/companies';
};

export type FundControllerGetCompaniesResponses = {
    /**
     * List all companies for this fund
     */
    200: Array<Company>;
};

export type FundControllerGetCompaniesResponse = FundControllerGetCompaniesResponses[keyof FundControllerGetCompaniesResponses];

export type PersonalityControllerFindAllData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/personalities';
};

export type PersonalityControllerFindAllResponses = {
    200: unknown;
};

export type PersonalityControllerCreateData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/personalities';
};

export type PersonalityControllerCreateResponses = {
    201: unknown;
};

export type PersonalityControllerRemoveData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/personalities/{id}';
};

export type PersonalityControllerRemoveResponses = {
    200: unknown;
};

export type PersonalityControllerFindOneData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/personalities/{id}';
};

export type PersonalityControllerFindOneResponses = {
    200: unknown;
};

export type PersonalityControllerUpdateData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/personalities/{id}';
};

export type PersonalityControllerUpdateResponses = {
    200: unknown;
};

export type PersonalityControllerGetCompaniesData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/personalities/{id}/companies';
};

export type PersonalityControllerGetCompaniesResponses = {
    /**
     * List all companies for this personality
     */
    200: Array<Company>;
};

export type PersonalityControllerGetCompaniesResponse = PersonalityControllerGetCompaniesResponses[keyof PersonalityControllerGetCompaniesResponses];

export type SectorControllerFindAllData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/sectors';
};

export type SectorControllerFindAllResponses = {
    200: unknown;
};

export type SectorControllerCreateData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/sectors';
};

export type SectorControllerCreateResponses = {
    201: unknown;
};

export type SectorControllerRemoveData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/sectors/{id}';
};

export type SectorControllerRemoveResponses = {
    200: unknown;
};

export type SectorControllerFindOneData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/sectors/{id}';
};

export type SectorControllerFindOneResponses = {
    200: unknown;
};

export type SectorControllerUpdateData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/sectors/{id}';
};

export type SectorControllerUpdateResponses = {
    200: unknown;
};

export type SectorControllerGetCompaniesData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/sectors/{id}/companies';
};

export type SectorControllerGetCompaniesResponses = {
    /**
     * List all companies for this sector
     */
    200: Array<Company>;
};

export type SectorControllerGetCompaniesResponse = SectorControllerGetCompaniesResponses[keyof SectorControllerGetCompaniesResponses];

export type ClientOptions = {
    baseUrl: string;
};